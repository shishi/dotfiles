# vim: set nowrap filetype=zsh:
#
# Command iTerm2 from the shell by sending it "snippets" of AppleScript
# code.
#
# Examples:
#
#   echo 'set number of columns of terminal 2 to 80' | tell-iterm2
#
# Use the -tab option to target the current tab, eg.:
#
#   echo 'write text "ls -l" & return' | tell-iterm2 -tab
#
# Use the -d option to change the text item delimiter for the output,
# eg.:
#
#   echo '{name, tty}' | tell-iterm2 -tab
#   # Prints:
#   # default: echo (zsh), /dev/ttys018
#
#   echo '{name, tty}' | tell-iterm2 -tab -d "\n" 
#   # Prints:
#   # default: echo (zsh)
#   # /dev/ttys018

if [[ ! -x `which osascript` ]]; then
    echo "osascript not found -- not on a Mac?"
    return 1
fi

local tabvar term_running tab_found  delimcmd user_scpt ret
typeset -A delimvar
zparseopts -D tab=tabvar d:=delimvar

# Quit on problem with options
ret=$?
if [[ $ret != 0 ]] return $ret

if [[ $delimvar[-d] != "" ]]; then
    delimcmd=`cat <<DCMD
set _result to result
set Applescript's text item delimiters to "$delimvar"
_result as text
DCMD`
fi

term_running=`osascript <<OSA
tell application "System Events"
    set c to count of (application processes whose bundle identifier is "com.googlecode.iterm2")
    return c
end
OSA`

if [[ $term_running == 0 ]]; then
    echo "iTerm is not running!" >&2
    return 1
fi

user_scpt=`cat /dev/stdin`

if [[ $tabvar == "-tab" ]]; then
  osascript <<OSA
  tell app "iTerm" 
    tell my find_tab("$TTY")
      $user_scpt
    end
    $delimcmd
  end
  to find_tab(tty_name)
    tell application "iTerm"
      first item of (sessions of current terminal whose tty is equal to tty_name)
    end tell
  end find_tab
OSA
else
  osascript <<OSA
  tell app "iTerm" 
    $user_scpt
  end
  $delimcmd
OSA
fi
